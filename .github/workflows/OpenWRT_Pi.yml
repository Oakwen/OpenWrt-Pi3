name: OpenWRT_Pi

on:
  watch:
    types: started
  #   push:
  #     branches: [master]
  #   pull_request:
  #     branches: [master]
  schedule:
    # Every day at 18pm
    - cron: "0 18 * * *"

env:
  SSH_ACTIONS: false

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Initialization environment.
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #sudo swapoff /mnt/swapfile

          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          docker container stop $(docker container ls -a -q) && docker system prune --all --force --volumns
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* docker*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar mkisofs
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo df -h

      - name: Clone source and install
        run: |
          git clone https://github.com/coolsnowwolf/lede
          cd lede
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Download and Load custom configuration
        run: |
          cd lede
          curl -fsSL https://raw.githubusercontent.com/Oakwen/Openwrt/master/config/Pi3/.config >.config
          bash <(curl -fsSL https://raw.githubusercontent.com/Oakwen/Openwrt/master/config/diy.sh)
          ./scripts/feeds install -a
          make defconfig

        #  - name: SSH connection to Actions
        #  uses: Oakwen/debugger-action@master
        #  if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')
      - name: Download package
        run: |
          cd lede
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Multi-core compile
        run: |
          cd lede
          echo -e "$(nproc) thread compile"
          df -h
          make -j$(nproc)
          df -h

      - name: Single-core compile
        if: failure()
        run: |
          df -h
          cd lede
          make -j1 V=s
          df -h

      # - name: Upload entire bin directory
      #   uses: actions/upload-artifact@main
      #   if: always()
      #   with:
      #     name: LEDE-RaspberryPi-bin-dictionary
      #     path: lede/bin

      - name: Upload rootfs only
        uses: actions/upload-artifact@v2
        if: success()
        with:
          name: openwrt-bcm27xx-bcm2710-rpi-3-rootfs.tar.gz
          path: lede/bin/targets/bcm27xx/bcm2710/openwrt-bcm27xx-bcm2710-rpi-3-rootfs.tar.gz

      - name: Remove artifacts
        uses: c-hive/gha-remove-artifacts@v1.1.0
        with:
          age: "1 week"
          skip-tags: true
